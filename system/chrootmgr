#!/usr/bin/env bash

typeset MYSELF="$(readlink -e $0 || realpath $0)"
typeset MYPATH="${MYSELF%/*}"

# Load main library
typeset -a ammpaths=("$MYPATH/../lib/ammlib" "$HOME/.ammlib" "/etc/ammlib")
for ammpath in "${ammpaths[@]}" fail; do
	[[ -e "$ammpath/ammlib" ]] && source "$ammpath/ammlib" && break
done
if [[ "$ammpath" == "fail" ]]; then
	echo >&2 "Unable to find ammlib in paths '${ammpaths[@]}'"
	echo >&2 "Download it with 'git clone https://github.com/Saruspete/ammlib.git ${ammpaths[0]}'"
	exit 1
fi


# Root is required for listing and accessing many paths
[[ "$__AMMLIB_USERID" != 0 ]] && ammLog::Die "You must run this script as root"


ammLib::Require "pkg" "chroot" "input" "optparse"

ammOptparse::AddOptGroupDesc "Configuration"
ammOptparse::AddOpt "-c|--config"  "Load config from file"       ""
ammOptparse::AddOpt "-s|--save"    "Save current state as file"  "%{root}/%{name}.cfg"

# Early configuration parsing for help pre-filling
ammOptparse::Parse "config"
typeset CFG_FILE="$(ammOptparse::Get "config")"

if [[ -n "$CFG_FILE" ]]; then
	:
fi


ammOptparse::AddOptGroupDesc "Chroot folders"
ammOptparse::AddOpt "-r|--root"    "Set the chroot path"         "$h" "ammString::IsPath"
ammOptparse::AddOpt "-n|--name"    "Set the name of chroot"      ""

ammOptparse::AddActionWord "continue" "create" "destroy" "list" "start" "stop" "enter"
ammOptparse::Parse --no-unknown || ammLog::Die "Parsing error"

# Register our input
ammInput::SetPrefix ""
ammInput::Register "basedir" "Root dir where to create chroot" "$MYPATH/${0##*/}.dat"
ammInput::Register "osvers"  "Version of the OS to install" "centos-7.5" "ammChroot::OSNameValidate"

ammInput::Populate || ammLog::Die "Error during input parsing"


typeset chrootOsName="$(ammInput::Get "os-name")"
typeset chrootOsVers="$(ammInput::Get "os-version")"

typeset CHR_NAME="$(ammInput::Get "osvers")"
typeset CHR_BASE="$MYPATH/${0##*/}.dat/$CHR_NAME"


function chroot_create {
	# Create the chroot
	ammChroot::Create "$CHR_BASE" "$CHR_NAME"
	
	# Populate it
	#ammChroot::

}

function chroot_destroy {
	ammChroot::Stop "$CHR_BASE"
	ammChroot::Destroy "$CHR_BASE"
}


function main {
	create "$@"
}

main "$@"
